import { Tree } from '@nrwl/tao/src/shared/tree';
import { ProjectConfiguration } from '@nrwl/tao/src/shared/workspace';
import { NxJsonProjectConfiguration } from '@nrwl/tao/src/shared/nx';
/**
 * Adds project configuration to the Nx workspace.
 *
 * The project configuration is stored in workspace.json and nx.json. The utility will update
 * both files.
 *
 * @param host - the file system tree
 * @param projectName - unique name. Often directories are part of the name (e.g., mydir-mylib)
 * @param projectConfiguration - project configuration
 */
export declare function addProjectConfiguration(host: Tree, projectName: string, projectConfiguration: ProjectConfiguration & NxJsonProjectConfiguration): void;
/**
 * Updates the configuration of an existing project.
 *
 * The project configuration is stored in workspace.json and nx.json. The utility will update
 * both files.
 *
 * @param host - the file system tree
 * @param projectName - unique name. Often directories are part of the name (e.g., mydir-mylib)
 * @param projectConfiguration - project configuration
 */
export declare function updateProjectConfiguration(host: Tree, projectName: string, projectConfiguration: ProjectConfiguration & NxJsonProjectConfiguration): void;
/**
 * Reads a project configuration.
 *
 * The project configuration is stored in workspace.json and nx.json. The utility will read
 * both files.
 *
 * @param host - the file system tree
 * @param projectName - unique name. Often directories are part of the name (e.g., mydir-mylib)
 */
export declare function readProjectConfiguration(host: Tree, projectName: string): ProjectConfiguration & NxJsonProjectConfiguration;
